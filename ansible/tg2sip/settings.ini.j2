# Tg2SIP setting
; sample settings file
; commented settings are optional

[logging]
# 0-trace 1-debug 3-warn 2-info 4-err 5-crit 6-off
;core=2

# 0-trace 1-debug 3-warn 2-info 4-err 5-crit 6-off
;tgvoip=5

# 0-trace 1-debug 3-warn 2-info 4-err 5-crit 6-off
;pjsip=2

# log sip messages if pjsip debug is enabled
;sip_messages=false

# minimal log level that will be written into console
;console_min_level=0

# minimal log level that will be written into file
;file_min_level=0

# TDLib is written to file only and has its own log level values
# not affected by other log settings
# 0-fatal  1-errors  2-warnings  3-info 4-debug 5-verbose debug
;tdlib=3

[sip]
# Address to advertise as the address UDP transport.
;public_address=

;stun_server=

# port number specified in port.
port=5062

# Specify the port range for socket binding, relative to the start
;port_range=0

# The Address of Record or AOR, that is full SIP URL that identifies the account.
# The value can take name address or URL format, and will look something
# like "sip:account@serviceprovider".
;id_uri=sip:localhost

# SIP URI for TG->SIP incoming calls processing
# This param will modify those field on SIP message:
#     INVITE sip:tg-extension-on-pbx@192.168.1.140:5060 SIP/2.0
#     To: sip:tg-extension-on-pbx@192.168.1.140
callback_uri=sip:tg2sip-demo@{{ ansible_host }}

# use L16@48k codec if true or OPUS@48k otherwise
# keep true for lower CPU consumption
raw_pcm=false

# Specify the number of worker threads to handle incoming RTP
# packets. A value of one is recommended for most applications.
;thread_count=1

[telegram]
# Application identifier for Telegram API access
# ID and Hash which can be obtained at https://my.telegram.org.
api_id={{ telegram_api_id }}
api_hash={{ telegram_api_hash }}

# IETF language tag of the user's operating system language
;system_language_code=en-US

# Model of the device the application is being run on
;device_model=PC

# Version of the operating system the application is being run on
;system_version=Linux

;application_version=1.0

# The path to the directory for the persistent TDLib database;
# if empty, the current working directory will be used.
# If TG2SIP_STANDARD_FOLDER env varible is set to YES on OS system
#    this field won be working, instead /var/tg2sip will be used.
#    and this file have to be on /etc/tg2sip/settings.ini
database_folder={{ telegram_database_folder|default('/var/tg2sip') }}

# True, if UDP peer-to-peer connections are supported
udp_p2p={{ telegram_p2p|default(true)}}

# True, if connection through UDP reflectors is supported.
;udp_reflector=true

## Further DSP settings will have no effect if libtgvoip is compiled with TGVOIP_NO_DSP option.

# acoustic echo cancellation
;enable_aec=false

# noise suppression
;enable_ns=false

# automatic gain control
;enable_agc=false

## use SOCKS5 proxy for MTProto requests
;use_proxy=false
;proxy_address=
;proxy_port=0
;proxy_username=
;proxy_password=

## use SOCKS5 proxy for VoIP
;use_voip_proxy=false
;voip_proxy_address=
;voip_proxy_port=0
;voip_proxy_username=
;voip_proxy_password=

[other]
# If gateway gets temporary blocked with "Too Many Requests" reason,
# then block all outgoing telegram requests for X more seconds than was
# requested by server
;extra_wait_time=30

# Seconds to wait on PEER_FLOOD
;peer_flood_time=86400
